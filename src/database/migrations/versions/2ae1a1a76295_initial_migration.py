"""Initial migration

Revision ID: 2ae1a1a76295
Revises: 
Create Date: 2025-04-22 16:11:16.483100

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '2ae1a1a76295'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('at_bat_types',
    sa.Column('at_bat_type_id', sa.Integer(), nullable=False),
    sa.Column('at_bat_type_name', sa.String(), nullable=False),
    sa.Column('is_pa', sa.Boolean(), nullable=False),
    sa.Column('is_ab', sa.Boolean(), nullable=False),
    sa.Column('is_ob', sa.Boolean(), nullable=False),
    sa.Column('is_hit', sa.Boolean(), nullable=False),
    sa.Column('num_bases', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('at_bat_type_id')
    )
    op.create_table('basketball_shot_types',
    sa.Column('shot_type_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('shot_type_id')
    )
    op.create_table('pitch_result_types',
    sa.Column('pitch_result_name', sa.String(), nullable=False),
    sa.Column('pitch_result_id', sa.Integer(), nullable=False),
    sa.Column('is_strike', sa.Boolean(), nullable=False),
    sa.Column('is_swing', sa.Boolean(), nullable=False),
    sa.Column('is_contact', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('pitch_result_name'),
    sa.UniqueConstraint('pitch_result_id')
    )
    op.create_table('pitch_types',
    sa.Column('pitch_type_name', sa.String(), nullable=False),
    sa.Column('pitch_type_id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('pitch_type_name'),
    sa.UniqueConstraint('pitch_type_id')
    )
    op.create_table('provider_mapping',
    sa.Column('provider', sa.String(), nullable=False),
    sa.Column('entity_type', sa.String(), nullable=False),
    sa.Column('entity_id', sa.String(), nullable=False),
    sa.Column('provider_id', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('provider', 'entity_type', 'entity_id')
    )
    op.create_table('schools',
    sa.Column('school_id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('location', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('school_id')
    )
    op.create_table('sports',
    sa.Column('sport_id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('sport_id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('stadiums',
    sa.Column('stadium_id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('location', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('stadium_id')
    )
    op.create_table('contact_types',
    sa.Column('contact_type_id', sa.Integer(), nullable=False),
    sa.Column('at_bat_type_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['at_bat_type_id'], ['at_bat_types.at_bat_type_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('contact_type_id')
    )
    op.create_table('leagues',
    sa.Column('league_id', sa.String(), nullable=False),
    sa.Column('sport_id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['sport_id'], ['sports.sport_id'], ),
    sa.PrimaryKeyConstraint('league_id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('league_metrics',
    sa.Column('league_id', sa.String(), nullable=False),
    sa.Column('entity_type', sa.String(), nullable=False),
    sa.Column('timeframe', sa.String(), nullable=False),
    sa.Column('metric_name', sa.String(), nullable=False),
    sa.Column('best_value', sa.Numeric(), nullable=True),
    sa.Column('worst_value', sa.Numeric(), nullable=True),
    sa.Column('q1', sa.Numeric(), nullable=True),
    sa.Column('q2', sa.Numeric(), nullable=True),
    sa.Column('q4', sa.Numeric(), nullable=True),
    sa.Column('q6', sa.Numeric(), nullable=True),
    sa.Column('q8', sa.Numeric(), nullable=True),
    sa.Column('q9', sa.Numeric(), nullable=True),
    sa.Column('reference_date', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['league_id'], ['leagues.league_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('league_id', 'entity_type', 'timeframe', 'metric_name')
    )
    op.create_table('stat_metrics',
    sa.Column('league_id', sa.String(), nullable=False),
    sa.Column('entity_type', sa.String(), nullable=False),
    sa.Column('entity_id', sa.String(), nullable=False),
    sa.Column('timeframe', sa.String(), nullable=False),
    sa.Column('metric_name', sa.String(), nullable=False),
    sa.Column('value', sa.Numeric(), nullable=True),
    sa.Column('reference_date', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['league_id'], ['leagues.league_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('league_id', 'entity_type', 'entity_id', 'timeframe', 'metric_name')
    )
    op.create_table('teams',
    sa.Column('team_id', sa.String(), nullable=False),
    sa.Column('league_id', sa.String(), nullable=False),
    sa.Column('school_id', sa.String(), nullable=True),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('abrv', sa.String(), nullable=False),
    sa.Column('conference', sa.String(), nullable=True),
    sa.Column('division', sa.String(), nullable=True),
    sa.Column('primary_color', sa.String(), nullable=True),
    sa.Column('secondary_color', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['league_id'], ['leagues.league_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['school_id'], ['schools.school_id'], ),
    sa.PrimaryKeyConstraint('team_id')
    )
    op.create_table('games',
    sa.Column('game_id', sa.String(), nullable=False),
    sa.Column('league_id', sa.String(), nullable=False),
    sa.Column('home_id', sa.String(), nullable=False),
    sa.Column('away_id', sa.String(), nullable=False),
    sa.Column('winner_id', sa.String(), nullable=True),
    sa.Column('loser_id', sa.String(), nullable=True),
    sa.Column('stadium_id', sa.String(), nullable=True),
    sa.Column('is_neutral_site', sa.Boolean(), nullable=True),
    sa.Column('game_date', sa.DateTime(), nullable=False),
    sa.Column('season', sa.Integer(), nullable=False),
    sa.Column('week', sa.Integer(), nullable=True),
    sa.Column('game_type', sa.String(), nullable=False),
    sa.Column('game_result', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['away_id'], ['teams.team_id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['home_id'], ['teams.team_id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['league_id'], ['leagues.league_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['loser_id'], ['teams.team_id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['stadium_id'], ['stadiums.stadium_id'], ),
    sa.ForeignKeyConstraint(['winner_id'], ['teams.team_id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('game_id')
    )
    op.create_table('players',
    sa.Column('player_id', sa.String(), nullable=False),
    sa.Column('sport_id', sa.String(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('height', sa.Integer(), nullable=True),
    sa.Column('weight', sa.Integer(), nullable=True),
    sa.Column('bats', sa.String(), nullable=True),
    sa.Column('throws', sa.String(), nullable=True),
    sa.Column('position', sa.String(), nullable=True),
    sa.Column('birthdate', sa.Date(), nullable=True),
    sa.Column('current_team_id', sa.String(), nullable=True),
    sa.Column('uniform_number', sa.String(), nullable=True),
    sa.Column('college', sa.String(), nullable=True),
    sa.Column('draft_year', sa.Integer(), nullable=True),
    sa.Column('draft_round', sa.Integer(), nullable=True),
    sa.Column('draft_pick', sa.Integer(), nullable=True),
    sa.Column('draft_team_id', sa.String(), nullable=True),
    sa.Column('graduation_yr', sa.String(), nullable=True),
    sa.Column('rookie_season', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['current_team_id'], ['teams.team_id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['draft_team_id'], ['teams.team_id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['sport_id'], ['sports.sport_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('player_id')
    )
    op.create_table('at_bats',
    sa.Column('at_bat_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('game_id', sa.String(), nullable=False),
    sa.Column('team_id', sa.String(), nullable=False),
    sa.Column('opp_id', sa.String(), nullable=False),
    sa.Column('play_num', sa.String(), nullable=False),
    sa.Column('pitcher_id', sa.String(), nullable=False),
    sa.Column('batter_id', sa.String(), nullable=False),
    sa.Column('at_bat_type_id', sa.Integer(), nullable=False),
    sa.Column('hit_hardness', sa.Integer(), nullable=True),
    sa.Column('hit_style', sa.Integer(), nullable=True),
    sa.Column('hit_distance', sa.Integer(), nullable=True),
    sa.Column('hit_angle', sa.Integer(), nullable=True),
    sa.Column('period', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['at_bat_type_id'], ['at_bat_types.at_bat_type_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['batter_id'], ['players.player_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['game_id'], ['games.game_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['opp_id'], ['teams.team_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['pitcher_id'], ['players.player_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['team_id'], ['teams.team_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('at_bat_id')
    )
    op.create_table('baseball_bullpen',
    sa.Column('lineup_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('game_id', sa.String(), nullable=False),
    sa.Column('player_id', sa.String(), nullable=False),
    sa.Column('team_id', sa.String(), nullable=False),
    sa.Column('opp_id', sa.String(), nullable=False),
    sa.Column('pitch_order', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['game_id'], ['games.game_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['opp_id'], ['teams.team_id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['player_id'], ['players.player_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['team_id'], ['teams.team_id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('lineup_id')
    )
    op.create_table('baseball_lineup',
    sa.Column('lineup_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('game_id', sa.String(), nullable=False),
    sa.Column('player_id', sa.String(), nullable=False),
    sa.Column('team_id', sa.String(), nullable=False),
    sa.Column('opp_id', sa.String(), nullable=False),
    sa.Column('batt_order', sa.Integer(), nullable=False),
    sa.Column('sub_order', sa.Integer(), nullable=True),
    sa.Column('pos', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['game_id'], ['games.game_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['opp_id'], ['teams.team_id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['player_id'], ['players.player_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['team_id'], ['teams.team_id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('lineup_id')
    )
    op.create_table('baseball_team_stats',
    sa.Column('team_id', sa.String(), nullable=False),
    sa.Column('game_id', sa.String(), nullable=False),
    sa.Column('opp_id', sa.String(), nullable=False),
    sa.Column('runs', sa.Integer(), nullable=False),
    sa.Column('hits', sa.Integer(), nullable=False),
    sa.Column('errors', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['game_id'], ['games.game_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['opp_id'], ['teams.team_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['team_id'], ['teams.team_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('team_id', 'game_id')
    )
    op.create_table('basketball_player_stats',
    sa.Column('player_id', sa.String(), nullable=False),
    sa.Column('game_id', sa.String(), nullable=False),
    sa.Column('team_id', sa.String(), nullable=False),
    sa.Column('opp_id', sa.String(), nullable=False),
    sa.Column('starter', sa.Boolean(), nullable=False),
    sa.Column('minutes', sa.Float(), nullable=False),
    sa.Column('fga', sa.Integer(), nullable=False),
    sa.Column('fgm', sa.Integer(), nullable=False),
    sa.Column('fta', sa.Integer(), nullable=False),
    sa.Column('ftm', sa.Integer(), nullable=False),
    sa.Column('tpa', sa.Integer(), nullable=False),
    sa.Column('tpm', sa.Integer(), nullable=False),
    sa.Column('pts', sa.Integer(), nullable=False),
    sa.Column('oreb', sa.Integer(), nullable=False),
    sa.Column('dreb', sa.Integer(), nullable=False),
    sa.Column('ast', sa.Integer(), nullable=False),
    sa.Column('stl', sa.Integer(), nullable=False),
    sa.Column('blk', sa.Integer(), nullable=False),
    sa.Column('turnovers', sa.Integer(), nullable=False),
    sa.Column('fouls', sa.Integer(), nullable=False),
    sa.Column('plus_minus', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['game_id'], ['games.game_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['opp_id'], ['teams.team_id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['player_id'], ['players.player_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['team_id'], ['teams.team_id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('player_id', 'game_id')
    )
    op.create_table('basketball_shots',
    sa.Column('player_shot_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('game_id', sa.String(), nullable=False),
    sa.Column('player_id', sa.String(), nullable=False),
    sa.Column('team_id', sa.String(), nullable=False),
    sa.Column('opp_id', sa.String(), nullable=False),
    sa.Column('period', sa.Integer(), nullable=False),
    sa.Column('shot_type_id', sa.Integer(), nullable=False),
    sa.Column('assist_id', sa.String(), nullable=True),
    sa.Column('shot_made', sa.Boolean(), nullable=False),
    sa.Column('points', sa.Integer(), nullable=False),
    sa.Column('base_pct', sa.Float(), nullable=False),
    sa.Column('side_pct', sa.Float(), nullable=False),
    sa.Column('distance', sa.Integer(), nullable=False),
    sa.Column('side_of_basket', sa.String(), nullable=False),
    sa.Column('clutch', sa.String(), nullable=True),
    sa.Column('zone', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['assist_id'], ['players.player_id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['game_id'], ['games.game_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['opp_id'], ['teams.team_id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['player_id'], ['players.player_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['shot_type_id'], ['basketball_shot_types.shot_type_id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['team_id'], ['teams.team_id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('player_shot_id')
    )
    op.create_table('basketball_team_stats',
    sa.Column('team_id', sa.String(), nullable=False),
    sa.Column('game_id', sa.String(), nullable=False),
    sa.Column('opp_id', sa.String(), nullable=False),
    sa.Column('minutes', sa.Integer(), nullable=False),
    sa.Column('fga', sa.Integer(), nullable=False),
    sa.Column('fgm', sa.Integer(), nullable=False),
    sa.Column('fta', sa.Integer(), nullable=False),
    sa.Column('ftm', sa.Integer(), nullable=False),
    sa.Column('tpa', sa.Integer(), nullable=False),
    sa.Column('tpm', sa.Integer(), nullable=False),
    sa.Column('pts', sa.Integer(), nullable=False),
    sa.Column('oreb', sa.Integer(), nullable=False),
    sa.Column('dreb', sa.Integer(), nullable=False),
    sa.Column('ast', sa.Integer(), nullable=False),
    sa.Column('stl', sa.Integer(), nullable=False),
    sa.Column('blk', sa.Integer(), nullable=False),
    sa.Column('turnovers', sa.Integer(), nullable=False),
    sa.Column('fouls', sa.Integer(), nullable=False),
    sa.Column('pts_in_pt', sa.Integer(), nullable=True),
    sa.Column('possessions', sa.Integer(), sa.Computed('fga + 0.44 * fta - oreb + turnovers', ), nullable=True),
    sa.ForeignKeyConstraint(['game_id'], ['games.game_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['opp_id'], ['teams.team_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['team_id'], ['teams.team_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('team_id', 'game_id')
    )
    op.create_table('game_lines',
    sa.Column('team_id', sa.String(), nullable=False),
    sa.Column('opp_id', sa.String(), nullable=False),
    sa.Column('game_id', sa.String(), nullable=False),
    sa.Column('spread', sa.Float(), nullable=False),
    sa.Column('spread_line', sa.Integer(), nullable=True),
    sa.Column('money_line', sa.Integer(), nullable=True),
    sa.Column('result', sa.Integer(), nullable=False),
    sa.Column('spread_outcome', sa.Integer(), nullable=True),
    sa.Column('money_outcome', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['game_id'], ['games.game_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['opp_id'], ['teams.team_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['team_id'], ['teams.team_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('team_id', 'game_id')
    )
    op.create_table('over_unders',
    sa.Column('game_id', sa.String(), nullable=False),
    sa.Column('over_under', sa.Float(), nullable=False),
    sa.Column('over_line', sa.Integer(), nullable=True),
    sa.Column('under_line', sa.Integer(), nullable=True),
    sa.Column('total', sa.Integer(), nullable=False),
    sa.Column('ou_outcome', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['game_id'], ['games.game_id'], ),
    sa.PrimaryKeyConstraint('game_id')
    )
    op.create_table('periods',
    sa.Column('game_id', sa.String(), nullable=False),
    sa.Column('team_id', sa.String(), nullable=False),
    sa.Column('opp_id', sa.String(), nullable=False),
    sa.Column('period', sa.Integer(), nullable=False),
    sa.Column('pts', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['game_id'], ['games.game_id'], ),
    sa.ForeignKeyConstraint(['opp_id'], ['teams.team_id'], ),
    sa.ForeignKeyConstraint(['team_id'], ['teams.team_id'], ),
    sa.PrimaryKeyConstraint('game_id', 'team_id', 'period')
    )
    op.create_table('pitches',
    sa.Column('pitch_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('game_id', sa.String(), nullable=False),
    sa.Column('pitcher_id', sa.String(), nullable=False),
    sa.Column('batter_id', sa.String(), nullable=False),
    sa.Column('team_id', sa.String(), nullable=False),
    sa.Column('opp_id', sa.String(), nullable=False),
    sa.Column('play_num', sa.String(), nullable=False),
    sa.Column('pitch_count', sa.Integer(), nullable=False),
    sa.Column('sequence', sa.Integer(), nullable=False),
    sa.Column('balls', sa.Integer(), nullable=False),
    sa.Column('strikes', sa.Integer(), nullable=False),
    sa.Column('velocity', sa.Integer(), nullable=False),
    sa.Column('pitch_x', sa.Integer(), nullable=False),
    sa.Column('pitch_y', sa.Integer(), nullable=False),
    sa.Column('pitch_location', sa.Integer(), nullable=False),
    sa.Column('hit_x', sa.Integer(), nullable=True),
    sa.Column('hit_y', sa.Integer(), nullable=True),
    sa.Column('pitch_type_name', sa.String(), nullable=False),
    sa.Column('ab_result_name', sa.String(), nullable=True),
    sa.Column('pitch_result_name', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['batter_id'], ['players.player_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['game_id'], ['games.game_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['opp_id'], ['teams.team_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['pitch_result_name'], ['pitch_result_types.pitch_result_name'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['pitch_type_name'], ['pitch_types.pitch_type_name'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['pitcher_id'], ['players.player_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['team_id'], ['teams.team_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('pitch_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('pitches')
    op.drop_table('periods')
    op.drop_table('over_unders')
    op.drop_table('game_lines')
    op.drop_table('basketball_team_stats')
    op.drop_table('basketball_shots')
    op.drop_table('basketball_player_stats')
    op.drop_table('baseball_team_stats')
    op.drop_table('baseball_lineup')
    op.drop_table('baseball_bullpen')
    op.drop_table('at_bats')
    op.drop_table('players')
    op.drop_table('games')
    op.drop_table('teams')
    op.drop_table('stat_metrics')
    op.drop_table('league_metrics')
    op.drop_table('leagues')
    op.drop_table('contact_types')
    op.drop_table('stadiums')
    op.drop_table('sports')
    op.drop_table('schools')
    op.drop_table('provider_mapping')
    op.drop_table('pitch_types')
    op.drop_table('pitch_result_types')
    op.drop_table('basketball_shot_types')
    op.drop_table('at_bat_types')
    # ### end Alembic commands ###
